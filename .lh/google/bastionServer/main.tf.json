{
    "sourceFile": "google/bastionServer/main.tf",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1627991453506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1627991453506,
            "name": "Commit-0",
            "content": "locals {\n  num_of_nodes = length (var.boot_disk_images)\n}\n\nresource \"google_compute_project_metadata\" \"ssh_keys\" {\n    metadata {\n      ssh-keys = \"${var.remote_user}:${file(var.public_key_path)}\"\n    }\n}\n\nresource \"google_service_account\" \"bastion\" {\n  account_id   = \"bastion-service-account\"\n  display_name = \"Service Account\"\n}\n\nresource \"google_compute_instance\" \"bastion\" {\n  count = local.num_of_nodes\n  name         = \"bastion-${count.index}\"\n  machine_type = var.machine_type\n  zone         = var.zone\n\n  tags = [\"bastion\"]\n\n  boot_disk {\n    initialize_params {\n      image = var.boot_disk_images[count.index]\n    }\n    auto_delete = true\n  }\n\n  network_interface {\n    network = var.network_selflink\n    subnetwork = var.subnet_selflink\n\n    access_config {\n      // Ephemeral IP\n    }\n  }\n\n  metadata = {\n    block-project-ssh-keys = false \n  }\n\n  service_account {\n    # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n    email  = google_service_account.bastion.email\n    scopes = [\"cloud-platform\"]\n  }\n\n  provisioner \"file\" {\n    connection {\n            type = \"ssh\"\n            host = self.network_interface.0.access_config.0.nat_ip\n            user = var.remote_user\n            private_key = file(var.private_key_path)\n    }\n    source      = \"bastion/bastion_install.sh\"\n    destination = \"${var.remote_dir}/bastion_install.sh\"\n  }\n  \n  provisioner \"file\" {\n    connection {\n            type = \"ssh\"\n            host = self.network_interface.0.access_config.0.nat_ip\n            user = var.remote_user\n            private_key = file(var.private_key_path)\n    }\n    source      = \"bastion/.zshrc\"\n    destination = \"${var.remote_dir}/.zshrc\"\n  }\n\n  provisioner \"file\" {\n    connection {\n            type = \"ssh\"\n            host = self.network_interface.0.access_config.0.nat_ip\n            user = var.remote_user\n            private_key = file(var.private_key_path)\n    }\n    source      = \"bastion/.p10k.zsh\"\n    destination = \"${var.remote_dir}/.p10k.zsh\"\n  }\n\n  provisioner \"remote-exec\" {\n    connection {\n            type = \"ssh\"\n            host = self.network_interface.0.access_config.0.nat_ip\n            user = var.remote_user\n            private_key = file(var.private_key_path)\n    } \n\n    inline = [\n      \"export ZSH=${var.zsh}\",\n      \"export TERRAFORM=${var.terraform}\",\n      \"export TERRAFORM_VER=${var.terraform_version}\",\n      \"export ANSIBLE=${var.ansible}\",\n      \"export KUBECTL=${var.kubectl}\",\n      \"export JQ=${var.jq}\",\n      \"export HELM=${var.helm}\",\n      \"export SOPS=${var.sops}\",\n      \"export SOPS_VER=${var.sops_version}\",\n      \"export K9S=${var.k9s}\",\n      \"export INSTALL_DIR=${var.remote_dir}\",\n      \"chmod +x ${var.remote_dir}/bastion_install.sh\",\n      \"${var.remote_dir}/bastion_install.sh\",\n    ]\n  }\n}\n\noutput \"instance_external_ip\" {\n  value = join(\"\", formatlist(\"%s\\n\", google_compute_instance.bastion[*].network_interface[0].access_config[0].nat_ip))\n}\n\n\n# resource \"local_file\" \"vars\" {\n#   content = google_compute_instance.bastion.network_interface[0].access_config[0].nat_ip\n#   filename = \"${path.module}/ip\"\n#   file_permission = 0644\n# }\n\n# firewall rule and iap"
        }
    ]
}